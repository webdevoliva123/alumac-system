{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekyadav/projects/alumac system/my-app/src/components/jsFiles/Subscribe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../cssFiles/subscribe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Subscribe = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [getUserEmailId, setgetUserEmailId] = useState('');\n  let emailId = event => {\n    let data = event.target.value;\n    setgetUserEmailId(data);\n  };\n  let submitButton = async event => {\n    event.preventDefault();\n    try {\n      if (getUserEmailId) {\n        let res = await fetch(`https://alumac-system-company-databse-default-rtdb.firebaseio.com/subscriberEmailId.json`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            setEmailId: getUserEmailId\n          })\n        });\n        if (res) {\n          alert('Thank you for subscribing');\n          setgetUserEmailId('');\n        }\n      } else {\n        alert('PLEASE ENTER YOUR EMAIL ID');\n      }\n    } catch (error) {\n      console.log('Opps Pls Again later', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscribe-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"subscribe-container__heading\",\n        children: \"Subscribe To Get Discount Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subscribe-container__subDec\",\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscribe-container__inputBx\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitButton,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter Your Email.\",\n            autoComplete: \"off\",\n            onChange: emailId,\n            value: getUserEmailId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"subscribe\",\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Subscribe, \"GLYDG3lTdKgPPGckrTwSHGccEpc=\");\n_c = Subscribe;\nexport default Subscribe;\nvar _c;\n$RefreshReg$(_c, \"Subscribe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Subscribe","_ref","_s","data","getUserEmailId","setgetUserEmailId","emailId","event","target","value","submitButton","preventDefault","res","fetch","method","headers","body","JSON","stringify","setEmailId","alert","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","autoComplete","onChange","_c","$RefreshReg$"],"sources":["/Users/abhishekyadav/projects/alumac system/my-app/src/components/jsFiles/Subscribe.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../cssFiles/subscribe.css'\n\n\nconst Subscribe = ({data}) => {\n\n    const [getUserEmailId, setgetUserEmailId] = useState('');\n\n    let emailId = (event) => {\n        let data = event.target.value;\n        setgetUserEmailId(data);\n    }\n\n    let submitButton = async (event) => {\n        event.preventDefault();\n        try{\n\n            if(getUserEmailId){\n                let res = await fetch(`https://alumac-system-company-databse-default-rtdb.firebaseio.com/subscriberEmailId.json`,{\n                    method : \"POST\",\n                    headers : {\n                        \"Content-Type\" : \"application/json\",\n                    },\n                    body : JSON.stringify({\n                        setEmailId : getUserEmailId,\n                    })\n                })\n\n                if(res){\n                    alert('Thank you for subscribing')\n                    setgetUserEmailId('')\n                }\n\n            }else{\n                alert('PLEASE ENTER YOUR EMAIL ID');\n            }\n\n        }\n        catch(error){\n            console.log('Opps Pls Again later',error);\n        }\n    } \n    return (\n        <>\n            <div className=\"subscribe-container\">\n                <h1 className='subscribe-container__heading'>Subscribe To Get Discount Offers</h1>\n                <p className='subscribe-container__subDec'>{data}</p>\n                <div className=\"subscribe-container__inputBx\">\n                        <form onSubmit={submitButton} method='POST'>\n                            <input type=\"email\" placeholder='Enter Your Email.' autoComplete='off' onChange={emailId} value={getUserEmailId} />\n                            <button type='submit' className='subscribe'>Subscribe</button>\n                        </form>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Subscribe\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,MAAMC,SAAS,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAF,IAAA;EAErB,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,IAAIW,OAAO,GAAIC,KAAK,IAAK;IACrB,IAAIJ,IAAI,GAAGI,KAAK,CAACC,MAAM,CAACC,KAAK;IAC7BJ,iBAAiB,CAACF,IAAI,CAAC;EAC3B,CAAC;EAED,IAAIO,YAAY,GAAG,MAAOH,KAAK,IAAK;IAChCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAG;MAEC,IAAGP,cAAc,EAAC;QACd,IAAIQ,GAAG,GAAG,MAAMC,KAAK,CAAE,0FAAyF,EAAC;UAC7GC,MAAM,EAAG,MAAM;UACfC,OAAO,EAAG;YACN,cAAc,EAAG;UACrB,CAAC;UACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;YAClBC,UAAU,EAAGf;UACjB,CAAC;QACL,CAAC,CAAC;QAEF,IAAGQ,GAAG,EAAC;UACHQ,KAAK,CAAC,2BAA2B,CAAC;UAClCf,iBAAiB,CAAC,EAAE,CAAC;QACzB;MAEJ,CAAC,MAAI;QACDe,KAAK,CAAC,4BAA4B,CAAC;MACvC;IAEJ,CAAC,CACD,OAAMC,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACF,KAAK,CAAC;IAC7C;EACJ,CAAC;EACD,oBACIxB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACI3B,OAAA;MAAK4B,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAChC3B,OAAA;QAAI4B,SAAS,EAAC,8BAA8B;QAAAD,QAAA,EAAC;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClFhC,OAAA;QAAG4B,SAAS,EAAC,6BAA6B;QAAAD,QAAA,EAAErB;MAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDhC,OAAA;QAAK4B,SAAS,EAAC,8BAA8B;QAAAD,QAAA,eACrC3B,OAAA;UAAMiC,QAAQ,EAAEpB,YAAa;UAACI,MAAM,EAAC,MAAM;UAAAU,QAAA,gBACvC3B,OAAA;YAAOkC,IAAI,EAAC,OAAO;YAACC,WAAW,EAAC,mBAAmB;YAACC,YAAY,EAAC,KAAK;YAACC,QAAQ,EAAE5B,OAAQ;YAACG,KAAK,EAAEL;UAAe;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnHhC,OAAA;YAAQkC,IAAI,EAAC,QAAQ;YAACN,SAAS,EAAC,WAAW;YAAAD,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAA3B,EAAA,CApDKF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAsDf,eAAeA,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}